"use strict";
var util = require("./util.js");
var isPrimitive = util.isPrimitive;
<<<<<<< HEAD
=======
var wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;
>>>>>>> 28c6f978a4ba08bdae3bd531dac6bebf07cd4f5d

module.exports = function(Promise) {
var returner = function () {
    return this;
};
var thrower = function () {
    throw this;
};
var returnUndefined = function() {};
var throwUndefined = function() {
    throw undefined;
};

var wrapper = function (value, action) {
    if (action === 1) {
        return function () {
            throw value;
        };
    } else if (action === 2) {
        return function () {
            return value;
        };
    }
};


Promise.prototype["return"] =
Promise.prototype.thenReturn = function (value) {
    if (value === undefined) return this.then(returnUndefined);

<<<<<<< HEAD
    if (isPrimitive(value)) {
=======
    if (wrapsPrimitiveReceiver && isPrimitive(value)) {
>>>>>>> 28c6f978a4ba08bdae3bd531dac6bebf07cd4f5d
        return this._then(
            wrapper(value, 2),
            undefined,
            undefined,
            undefined,
            undefined
       );
<<<<<<< HEAD
    } else if (value instanceof Promise) {
        value._ignoreRejections();
=======
>>>>>>> 28c6f978a4ba08bdae3bd531dac6bebf07cd4f5d
    }
    return this._then(returner, undefined, undefined, value, undefined);
};

Promise.prototype["throw"] =
Promise.prototype.thenThrow = function (reason) {
    if (reason === undefined) return this.then(throwUndefined);

<<<<<<< HEAD
    if (isPrimitive(reason)) {
=======
    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {
>>>>>>> 28c6f978a4ba08bdae3bd531dac6bebf07cd4f5d
        return this._then(
            wrapper(reason, 1),
            undefined,
            undefined,
            undefined,
            undefined
       );
    }
    return this._then(thrower, undefined, undefined, reason, undefined);
};
};
